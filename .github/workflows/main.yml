name: Go CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.x

      - name: Check out code
        uses: actions/checkout@v2

      # Set up PostgreSQL with Docker
      - name: Set up PostgreSQL container
        run: |
          docker run --name postgres-db -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} -e POSTGRES_USER=${{ secrets.DB_USER }} -e POSTGRES_DB=${{ secrets.DB_NAME }} -p 5432:5432 -d postgres:13
          # Wait for the database to be ready
          until docker exec postgres-db pg_isready -U ${{ secrets.DB_USER }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 1
          done

      - name: Run database migrations (up)
        id: migrate_up
        run: |
          export DB_URL="postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}?sslmode=disable"
          migrate -path ./migrations -database $DB_URL up

      - name: Run tests
        env:
          JIKEN_BASE_URL: ${{ secrets.JIKEN_BASE_URL }}
          DB_URL: ${{ secrets.DB_URL }}
        run: go test -v ./...

      # Run database migrations (down) on failure
      - name: Run database migrations (down) on failure
        if: failure()
        run: |
          export DB_URL="postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}?sslmode=disable"
          migrate -path ./migrations -database $DB_URL down
        continue-on-error: true

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.54
